<%
    renderPagination = (pagination) => {
        let totalPages = pagination.totalPages
        let currentPage = pagination.currentPage
        let limitItems = pagination.limitItems
        let pageRanges = pagination.pageRanges
        let xHtmlPagination = ''


        if(totalPages > 1){
            let xHtmlPrevious = '', xHtmlNext = '', xHtmlPages = ''
            
            if (currentPage > 1) {        
                xHtmlPrevious = `<li class="page-item page-link-btn "><a class="page-link page-link-btn" button-pagination="${currentPage - 1}"><i class="icon-angle-left"></i></a></li>`
            }
            if (currentPage < totalPages) {
                xHtmlNext = `<li class="page-item page-link-btn "><a class="page-link page-link-btn" button-pagination="${currentPage + 1}"><i class="icon-angle-right"></i></a></li>`
            }

            let middle = Math.ceil(pageRanges/2)
            let min = currentPage - middle + 1
            let max = min + pageRanges - 1

            if(min <= 1){
                min = 1
                max = pageRanges
            }
            if(max >= totalPages){
                max = totalPages
                min = ((max - pageRanges + 1) <= 1) ? 1 : max - pageRanges + 1
            }

            for (let i = min; i <= max; i++) {
                if(i === currentPage){
                    xHtmlPages += `<li class="page-item active"><a class="page-link" button-pagination="${i}">${i}</a></li>`
                } else {
                    xHtmlPages += `<li class="page-item "><a class="page-link" button-pagination="${i}">${i}</a></li>`
                }  
            }

            xHtmlPagination = xHtmlPrevious + xHtmlPages + xHtmlNext 
            return xHtmlPagination
        }   
    }
%>